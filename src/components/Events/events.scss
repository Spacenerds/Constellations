@import '../../App.scss';

// /////////////////////////////////////////////////////////////////
// Events
// /////////////////////////////////////////////////////////////////
.events-container {
    .section {
        padding: 20px !important;
    }
}

.types {
    background: #000;
    color: #fff;
}

.lunar-cycle {
    background: $deepspace;
    color: #fff;
    height: 100vh;
    text-align: center;
    background: linear-gradient(#000000, $deepspace);
    h1 {
        color: $teal;
        margin-bottom: 0;
    }
    .lunar-text {
        position: relative;
        z-index: 5;
    } //stars aren't working. figure out later
    @function star-shadow ($n) {
        $value: '#{random(100)}vw #{random(100)}vh #fff';
        @for $i from 2 through $n {
            $value: '#{$value}, #{random(100)}vw #{random(100)}vw #fff'
        }
        @return unquote($value)
    }
    $shadows-small: star-shadow(700);
    $shadows-medium: star-shadow(200);
    $shadows-large: star-shdaow(100);
    .star {
        transform-style: preserve-3d;
        position: fixed;
    }
    .starone {
        width: 1px;
        height: 1px;
        background: transparent;
        box-shadow: $shadows-small;
        animation-timing-function: ease(in-out-circ);
        animation-direction: alternate;
        &:after {
            content: " ";
            position: absolute;
            top: 100vh;
            width: 1px;
            height: 1px;
            background: transparent;
            box-shadow: $shadows-small;
        }
    }
    .startwo {
        width: 2px;
        height: 2px;
        background: transparent;
        box-shadow: $shadows-medium;
        animation-timing-function: ease(in-out-circ);
        animation-direction: alternate;
        &:after {
            content: " ";
            position: absolute;
            top: 100vh;
            width: 2px;
            height: 2px;
            background: transparent;
            box-shadow: $shadows-medium;
        }
    }
    .starthree {
        width: 3px;
        height: 3px;
        background: transparent;
        box-shadow: $shadows-large;
        animation-timing-function: ease(in-out-circ);
        animation-direction: alternate;
        &:after {
            content: " ";
            position: absolute;
            top: 100vh;
            width: 3px;
            height: 3px;
            background: transparent;
            box-shadow: $shadows-large;
        }
    }
    .tonight-moon {
        display: inline-block;
        vertical-align: top;
        margin-top: 87px;
        margin-right: 3vw;
    }
    #lunar-container {
        margin: auto;
        opacity: 0;
        h3 {
            margin: 0;
            color: $teal;
        }
        p {
            margin: 0;
            margin-bottom: 4px;
            color: $moon;
        }
        #moonCanvas {
            margin: 12px auto 20px auto;
        }
    }
    ul li {
        margin-top: 10px;
        display: inline-block;
        &:before {
            content: 'â˜¾ ';
            margin-left: 10px;
        }
    }
    .lunar-cycle-image img {
        width: 50vw;
        margin: auto;
        position: relative;
        z-index: 5;
    }
}

.lunar-eclipse {
    text-align: center;
    color: #fff;
    background: $deepspace;
    .lunar-eclipse-text {
        position: relative;
        z-index: 5;
        text-align: right;
        margin-right: 50px;
    }
    .moon-eclipse {
        position: absolute;
        margin: -37vh auto 0 -54vh;
        width: 130vh;
        z-index: 0;
        height: 130vh;
        border-radius: 50%;
        background: url("https://upload.wikimedia.org/wikipedia/commons/e/e1/FullMoon2010.jpg") no-repeat center / 124% 124%;
        animation: eclipse 20s linear infinite;
    }
    @keyframes eclipse {
        0% {
            box-shadow: inset 650px 650px 150px rgba(black, .8);
        }
        50% {
            box-shadow: inset 0 0 150px rgba(black, .8);
        }
        100% {
            box-shadow: inset -650px -650px 150px rgba(black, .8);
        }
    }
}

$se-size: 15vh;
$se-duration: 5s;
.solar-eclipse {
    background: $blue;
    .se-img-container {
        height: 20vh;
        animation: sky $se-duration linear infinite;
        background: $blue;
        @keyframes sky {
            from,
            to {
                background: $blue;
            }
            50% {
                background: black;
            }
        }
    }
    .solar-eclipse-image {
        position: relative;
        width: $se-size;
        height: $se-size;
        transform: translate(calc(49vw - #{$se-size/2}),
        calc(10vh - #{$se-size/2}));
    }
    .sun,
    .moon {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(red, .5);
        border-radius: 50%;
    }
    .sun {
        background: gold;
        animation: sun $se-duration linear infinite;
        @keyframes sun {
            50% {
                background: white;
                box-shadow: 0 0 5em white, 0 0 5em white, 0 0 5em white, 0 0 5em white;
            }
        }
    }
    .moon {
        animation: moon $se-duration linear infinite;
        @keyframes moon {
            from {
                transform: translateX(-110%);
                background: lightgray;
            }
            50% {
                background: black;
            }
            to {
                transform: translateX(110%);
                background: lightgray;
            }
        }
    }
}

.meteor {
    background: $moon;
    padding-bottom: 0 !important;
    $path: "http://orion9.net/_demos/meteorRain/img/";
    /*=======================*/
    /* MIXINS
        /*=======================*/
    @mixin keyframes($animation-name) {
        @-webkit-keyframes #{$animation-name} {
            @content;
        }
        @-moz-keyframes #{$animation-name} {
            @content;
        }
        @-ms-keyframes #{$animation-name} {
            @content;
        }
        @-o-keyframes #{$animation-name} {
            @content;
        }
        @keyframes #{$animation-name} {
            @content;
        }
    }
    @mixin animation($str) {
        -webkit-animation: #{$str};
        -moz-animation: #{$str};
        -ms-animation: #{$str};
        -o-animation: #{$str};
        animation: #{$str};
    }
    @mixin transform($str) {
        -webkit-transform: #{$str};
        -moz-transform: #{$str};
        -ms-transform: #{$str};
        -o-transform: #{$str};
        transform: #{$str};
    }
    @mixin transition($str) {
        -webkit-transition: -webkit-#{$str};
        -moz-transition: -moz-#{$str};
        -ms-transition: -ms-#{$str};
        -o-transition: -o-#{$str};
        transition: #{$str};
    }
    /*=======================*/
    /* SVG ELEMENTS
        /*=======================*/
    #foreground {
        position: relative;
        width: 100vw;
        height: 76vh;
    }
    #foreground>div {
        bottom: 0;
        position: absolute;
        transform-origin: 50% 100%;
        pointer-events: none;
    }
    .grass {
        width: 105%;
        height: 200px;
        left: -2.5%;
        background: url("#{$path}grass.svg") repeat-x bottom center;
        background-position: -100px 100%;
        @include animation("skew4 4s .2s ease-in-out infinite");
    }
    #tree1 {
        width: 335px;
        height: 425px;
        background: url("#{$path}tree1.svg") no-repeat;
        left: calc(15% - 335px / 2);
        @include animation("skew1 8s ease-in-out infinite");
    }
    .reed {
        background: url("#{$path}reed.svg") no-repeat;
        background-size: cover;
    }
    #reed1 {
        left: calc(15% - 335px / 2);
        width: 180px;
        height: 155px;
        @include animation("skew4 4s ease-in-out infinite");
    }
    #reed2 {
        left: calc(15% + 80px / 2);
        width: 200px;
        height: 180px;
        @include animation("skew4 4s .4s ease-in-out infinite");
    }
    #reed3 {
        left: calc(15% - 120px / 2);
        width: 220px;
        height: 200px;
        @include animation("skew4 4s .8s ease-in-out infinite");
    }
    #tree2 {
        width: 245px;
        height: 480px;
        background: url("#{$path}tree2.svg") no-repeat;
        right: calc(15% - 245px / 2);
        @include animation("skew1 8s 2s ease-in-out infinite");
    }
    #bush {
        right: calc(15% - 120px / 2);
        width: 210px;
        height: 135px;
        background: url("#{$path}bush.svg") no-repeat;
        background-size: cover;
        @include animation("skew4 4s .6s ease-in-out infinite");
    }
    #telescope {
        width: 130px;
        height: 150px;
        background: url("#{$path}telescope.svg") no-repeat;
        left: calc(50% + 45px);
        bottom: 55px !important;
    }
    #girl {
        width: 108px;
        height: 136px;
        background: url("#{$path}girl.svg") no-repeat;
        left: calc(50% - 108px / 2);
        bottom: 25px !important;
        cursor: pointer;
        cursor: alias;
        pointer-events: auto !important;
    }
    /*=======================*/
    /* OTHER ELEMENTS
        /*=======================*/
    #halo {
        opacity: 0;
        @include transition("opacity 1s ease-out");
    }
    #halo>div {
        position: absolute;
        width: 100%;
        height: 450px;
        background-color: rgba(170, 255, 230, .05);
        bottom: -275px;
        border-radius: 50%;
        box-shadow: 0 0 55px 0 rgba(170, 255, 230, .1);
        @include animation("halo 4s ease-in-out infinite");
        animation-play-state: paused;
    }
    .meteorShower #halo>div {
        animation-play-state: running;
    }
    /*=======================*/
    /* KEYFRAMES
        /*=======================*/
    @include keyframes(skew1) {
        0%,
        100% {
            @include transform("skewX(0)");
        }
        50% {
            @include transform("skewX(1deg)");
        }
    }
    @include keyframes(skew4) {
        0%,
        100% {
            @include transform("skewX(0)");
        }
        50% {
            @include transform("skewX(4deg)");
        }
    }
    @include keyframes(observing) {
        0%,
        80% {
            @include transform("skewX(0)");
        }
        10%,
        15% {
            @include transform("skewX(-4deg)");
        }
        25%,
        50% {
            @include transform("skewX(-4deg) skewY(4deg)");
        }
        55%,
        70% {
            @include transform("skewX(-4deg)")
        }
    }
    @include keyframes(halo) {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: .5;
        }
    }
}

.planetary {
    background: $dust;
}